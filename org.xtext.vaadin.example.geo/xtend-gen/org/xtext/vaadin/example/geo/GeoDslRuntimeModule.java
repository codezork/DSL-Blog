/**
 * generated by Xtext 2.19.0
 */
package org.xtext.vaadin.example.geo;

import org.eclipse.xtext.generator.IContextualOutputConfigurationProvider2;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.resource.persistence.IResourceStorageFacade;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.xbase.jvmmodel.IJvmModelInferrer;
import org.eclipse.xtext.xbase.resource.BatchLinkableResourceStorageFacade;
import org.xtext.vaadin.example.geo.AbstractGeoDslRuntimeModule;
import org.xtext.vaadin.example.geo.generator.GeoDslGenerator;
import org.xtext.vaadin.example.geo.jvmmodel.GeoDslJvmModelInferrer;
import org.xtext.vaadin.example.geo.scoping.GeoDslScopeProvider;
import org.xtext.vaadin.example.geo.util.GeoOutputConfigurationProvider;
import org.xtext.vaadin.example.geo.validation.GeoDslValidator;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
@SuppressWarnings("all")
public class GeoDslRuntimeModule extends AbstractGeoDslRuntimeModule {
  @Override
  public Class<? extends IScopeProvider> bindIScopeProvider() {
    return GeoDslScopeProvider.class;
  }
  
  @Override
  public Class<? extends GeoDslValidator> bindGeoDslValidator() {
    return GeoDslValidator.class;
  }
  
  @Override
  public Class<? extends IGenerator> bindIGenerator() {
    return GeoDslGenerator.class;
  }
  
  @Override
  public Class<? extends IJvmModelInferrer> bindIJvmModelInferrer() {
    return GeoDslJvmModelInferrer.class;
  }
  
  public Class<? extends IResourceStorageFacade> bindResourceStorageFacade() {
    return BatchLinkableResourceStorageFacade.class;
  }
  
  public Class<? extends IContextualOutputConfigurationProvider2> bindIContextualOutputConfigurationProvider2() {
    return GeoOutputConfigurationProvider.class;
  }
}
